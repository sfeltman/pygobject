/* pygirepository.h
 *
 * Generated by pygi-codegen with the following command line:
 *     ./tools/pygi-codegen GIRepository -t ./gi/codegen/cpython.template.h -o ./gi/pygirepository.h
*/

#ifndef __PYGIREPOSITORY_H__
#define __PYGIREPOSITORY_H__

#include <Python.h>
#include "pygirepository-custom.h"

extern PyTypeObject PyGIRepositoryArgument_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryArgument_get(obj) (obj->obj)
} PyGIRepositoryArgument;

extern PyTypeObject PyGIRepositoryArrayType_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryArrayType;

extern PyTypeObject PyGIRepositoryAttributeIter_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryAttributeIter_get(obj) (obj->obj)
} PyGIRepositoryAttributeIter;

extern PyTypeObject PyGIRepositoryBaseInfo_Type;

typedef struct {
    PyObject_HEAD
    GIBaseInfo *obj;
    #define PyGIRepositoryBaseInfo_get(obj) (obj->obj)
    GType gtype;
} PyGIRepositoryBaseInfo;

extern PyTypeObject PyGIRepositoryDirection_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryDirection;

extern PyTypeObject PyGIRepositoryFieldInfoFlags_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryFieldInfoFlags;

extern PyTypeObject PyGIRepositoryFunctionInfoFlags_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryFunctionInfoFlags;

extern PyTypeObject PyGIRepositoryInfoType_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryInfoType;

extern PyTypeObject PyGIRepositoryRepository_Type;

typedef struct {
    PyObject_HEAD
    GIRepository *obj;
    #define PyGIRepositoryRepository_get(obj) (obj->obj)
    GType gtype;
} PyGIRepositoryRepository;

extern PyTypeObject PyGIRepositoryRepositoryClass_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryRepositoryClass_get(obj) (obj->obj)
} PyGIRepositoryRepositoryClass;

extern PyTypeObject PyGIRepositoryRepositoryError_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryRepositoryError;

extern PyTypeObject PyGIRepositoryRepositoryLoadFlags_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryRepositoryLoadFlags;

extern PyTypeObject PyGIRepositoryRepositoryPrivate_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryRepositoryPrivate_get(obj) (obj->obj)
} PyGIRepositoryRepositoryPrivate;

extern PyTypeObject PyGIRepositoryScopeType_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryScopeType;

extern PyTypeObject PyGIRepositoryTransfer_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryTransfer;

extern PyTypeObject PyGIRepositoryTypeTag_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryTypeTag;

extern PyTypeObject PyGIRepositoryTypelib_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryTypelib_get(obj) (obj->obj)
} PyGIRepositoryTypelib;

extern PyTypeObject PyGIRepositoryUnresolvedInfo_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepositoryUnresolvedInfo_get(obj) (obj->obj)
} PyGIRepositoryUnresolvedInfo;

extern PyTypeObject PyGIRepositoryVFuncInfoFlags_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositoryVFuncInfoFlags;

extern PyTypeObject PyGIRepository_BaseInfoStub_Type;

typedef struct {
    PyObject_HEAD
    void *obj;
    #define PyGIRepository_BaseInfoStub_get(obj) (obj->obj)
} PyGIRepository_BaseInfoStub;

extern PyTypeObject PyGIRepositorynvokeError_Type;

typedef struct {
    PyObject_HEAD
} PyGIRepositorynvokeError;


PyObject * pygirepository_create_module (void);

#endif /*__PYGIREPOSITORY_H__*/

